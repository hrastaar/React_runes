{"version":3,"sources":["logo.svg","components/RuneItem.js","components/PaperSheet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RuneItem","props","state","currentRune","imageLink","fetch","then","res","json","out","console","log","j","perkStyle","id","m","n","slots","runes","perkNumber","setState","icon","catch","err","error","Card","style","maxWidth","display","margin","marginTop","CardMedia","image","this","title","width","height","CardContent","flex","Typography","component","variant","fontFamily","name","color","shortDesc","React","Component","PaperSheet","summonerId","participantArray","perks","perksArr","perkSubStyle","document","getElementById","onclick","jsonObj","url","value","Promise","resolve","reject","req","XMLHttpRequest","open","onload","status","response","alert","send","loadData","JSON","parse","val","loadIngameData","participants","forEach","participantObj","perkIds","Paper","fontWeight","fontSize","map","currentPerk","App","className","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23c46fe1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   card: {\r\n//     display: \"flex\",\r\n//     margin: 30\r\n//   },\r\n//   details: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\"\r\n//   },\r\n//   content: {\r\n//     flex: \"1 0 auto\"\r\n//   },\r\n//   cover: {\r\n//     width: 151\r\n//   },\r\n//   controls: {\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     paddingLeft: theme.spacing(1),\r\n//     paddingBottom: theme.spacing(1)\r\n//   },\r\n//   playIcon: {\r\n//     height: 38,\r\n//     width: 38\r\n//   }\r\n// }));\r\n\r\n// export default function RuneItem(props) {\r\nclass RuneItem extends React.Component{\r\n\r\nconstructor(props){\r\n  super(props)\r\n  this.state ={\r\n    currentRune:{},\r\n    imageLink: ''\r\n  }\r\n}\r\n\r\nrender(){\r\n  fetch(\r\n    \"http://ddragon.leagueoflegends.com/cdn/9.17.1/data/en_US/runesReforged.json\"\r\n  )\r\n    .then(res => res.json())\r\n    .then(out => {\r\n        console.log(out)\r\n        for(let j =0; j <5; j++){\r\n              if(this.props.perkStyle == out[j].id){\r\n                for(let m =0; m < 4; m++){\r\n                  for(let n =0; n < 3; n++){\r\n                    \r\n                    if(out[j].slots[m].runes[n].id == this.props.perkNumber){\r\n                      // currentRune = element.slots[m].runes[n]\r\n                      console.log(out[j].slots[m].runes[n])\r\n                      this.setState({\r\n                        currentRune: out[j].slots[m].runes[n],\r\n                        imageLink : \"http://ddragon.leagueoflegends.com/cdn/img/\" + out[j].slots[m].runes[n].icon\r\n                      })\r\n                      break\r\n                    \r\n                  }                  \r\n                }\r\n              }\r\n            }\r\n        }\r\n    })\r\n    .catch(err => console.error(err));\r\n\r\n  return (\r\n    <Card style={{maxWidth: 700, display: 'block', margin: '0 auto', marginTop: 50 }}>\r\n              <CardMedia\r\n        image= {this.state.imageLink}\r\n        title=\"Live from space album cover\"\r\n        style={{\r\n            width:64,\r\n            height:64,\r\n            margin: '0 auto'\r\n        }}\r\n      />\r\n      <div>\r\n        <CardContent style={{flex: '1 0 auto'}}>\r\n          <Typography component=\"h5\" variant=\"h5\" style={{fontFamily: 'Poppins'}}>\r\n            {this.state.currentRune.name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" style={{fontFamily: 'Poppins'}}>\r\n            {this.state.currentRune.shortDesc}\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n\r\n    </Card>\r\n  );\r\n}\r\n}\r\n\r\nexport default RuneItem\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RuneItem from \"./RuneItem\";\r\n\r\nclass PaperSheet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      summonerId: \"\",\r\n      participantArray: [],\r\n      perks: null,\r\n      perksArr: [],\r\n      perkStyle:'',\r\n      perkSubStyle:''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const searchBtn = document.getElementById(\"search-btn\");\r\n    searchBtn.onclick = () => {\r\n      let jsonObj = null;\r\n      loadData().then(res => {\r\n        jsonObj = JSON.parse(res);\r\n        this.setState({\r\n          summonerId: jsonObj.id\r\n        });\r\n        console.log(jsonObj.id);\r\n        loadIngameData(jsonObj.id).then(res => {\r\n          let jsonObj = JSON.parse(res);\r\n          console.log(jsonObj.participants);\r\n\r\n          jsonObj.participants.forEach(participantObj => {\r\n            if (participantObj.summonerId === this.state.summonerId) {\r\n              console.log(\"found summoner in the list\");\r\n              this.setState({\r\n                perks: participantObj.perks,\r\n                perksArr: participantObj.perks.perkIds,\r\n                perkStyle: participantObj.perks.perkStyle,\r\n                perkSubStyle: participantObj.perks.perkSubStyle,\r\n              });\r\n              console.log(participantObj);\r\n            }\r\n          });\r\n        });\r\n      });\r\n    };\r\n\r\n    function loadData() {\r\n      const userName = document.getElementById(\"textField\").value;\r\n      const url =\r\n        \"https://corsproxy2213.herokuapp.com/?q=https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" +\r\n        userName +\r\n        \"?api_key=RGAPI-992e7fb7-f222-4c20-a153-cb1962f4b99d\";\r\n      //implement fetch here\r\n      return new Promise(function(resolve, reject) {\r\n        var req = new XMLHttpRequest();\r\n        req.open(\"GET\", url);\r\n\r\n        req.onload = function() {\r\n          if (req.status === 200) {\r\n            console.log(req.response);\r\n            document.getElementById(\"root\").style.display = \"block\";\r\n            resolve(req.response);\r\n          } else {\r\n            reject(\r\n              alert(\r\n                \"The summoner you serached for doesn't appear to be in a game\"\r\n              )\r\n            );\r\n          }\r\n        };\r\n        req.send();\r\n      });\r\n    }\r\n\r\n    //The summoner has to be in an active game to gather the data\r\n    function loadIngameData(val) {\r\n      const url =\r\n        \"https://corsproxy2213.herokuapp.com/?q=https://euw1.api.riotgames.com/lol/spectator/v4/active-games/by-summoner/\" +\r\n        val +\r\n        \"?api_key=RGAPI-992e7fb7-f222-4c20-a153-cb1962f4b99d\";\r\n      return new Promise(function(resolve, reject) {\r\n        var req = new XMLHttpRequest();\r\n        req.open(\"GET\", url);\r\n\r\n        req.onload = function() {\r\n          if (req.status === 200) {\r\n            resolve(req.response);\r\n          } else {\r\n            reject(\r\n              alert(\r\n                \"The summoner you serached for doesn't appear to be in a game\"\r\n              )\r\n            );\r\n          }\r\n        };\r\n        req.send();\r\n      });\r\n    }\r\n\r\n    if (this.state.perks == null) {\r\n      return (\r\n        <div>\r\n          <Paper>\r\n            <Typography\r\n              style={{\r\n                fontFamily: \"Poppins\",\r\n                fontWeight: \"bold\",\r\n                marginTop: 50\r\n              }}\r\n            >\r\n              Selected Runes\r\n            </Typography>\r\n            <Typography component=\"p\" style={{ fontFamily: \"Poppins\" }}>\r\n              {this.state.summonerId}\r\n            </Typography>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Paper>\r\n            <Typography\r\n\r\n              style={{\r\n                fontFamily: \"Poppins\",\r\n                fontWeight: \"bold\",\r\n                marginTop: 50,\r\n                fontSize: 45\r\n              }}\r\n            >\r\n              Selected Runes\r\n            </Typography>\r\n            <Typography component=\"p\" style={{ fontFamily: \"Poppins\" }}>\r\n              {this.state.perksArr.map(currentPerk => {\r\n                return <RuneItem perkNumber={currentPerk} perkStyle={this.state.perkStyle} perkSubStyle={this.state.perkSubStyle}></RuneItem>;\r\n              })}\r\n            </Typography>\r\n            {}\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default PaperSheet;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PaperSheet from \"./components/PaperSheet.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <PaperSheet></PaperSheet>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App/> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}